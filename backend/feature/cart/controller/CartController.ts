import { Request, Response } from "express";
import db from "../../../config/dbConfig";

// Ïû•Î∞îÍµ¨Îãà ÌÉÄÏûÖ Ï†ïÏùò
interface CartItem {
  id: string;
  name: string;
  price: number;
  quantity: number;
  image: string;
}

/**
 * üìå 1. Ïû•Î∞îÍµ¨Îãà Î™©Î°ù Ï°∞Ìöå (GET /api/cart)
 */
export const getCart = async (req: Request, res: Response) => {
  try {
    const [rows] = await db.query<CartItem[]>("SELECT * FROM cart");
    res.json(rows);
  } catch (error) {
    console.error("‚ùå Ïû•Î∞îÍµ¨Îãà Ï°∞Ìöå Ïò§Î•ò:", error);
    res.status(500).json({ message: "ÏÑúÎ≤Ñ Ïò§Î•ò" });
  }
};

/**
 * üìå 2. ÏÉÅÌíà Ï∂îÍ∞Ä (POST /api/cart)
 */
export const addToCart = async (req: Request, res: Response) => {
  const { id, name, price, quantity, image } = req.body;
  try {
    const [existing] = await db.query<CartItem[]>("SELECT * FROM cart WHERE id = ?", [id]);

    if (existing.length > 0) {
      await db.query("UPDATE cart SET quantity = quantity + ? WHERE id = ?", [quantity, id]);
    } else {
      await db.query(
        "INSERT INTO cart (id, name, price, quantity, image) VALUES (?, ?, ?, ?, ?)",
        [id, name, price, quantity, image]
      );
    }

    const [updatedCart] = await db.query<CartItem[]>("SELECT * FROM cart");
    res.json(updatedCart);
  } catch (error) {
    console.error("‚ùå ÏÉÅÌíà Ï∂îÍ∞Ä Ïò§Î•ò:", error);
    res.status(500).json({ message: "ÏÑúÎ≤Ñ Ïò§Î•ò" });
  }
};

/**
 * üìå 3. ÏÉÅÌíà ÏàòÎüâ Ï¶ùÍ∞Ä (PUT /api/cart/:id/increase)
 */
export const increaseQuantity = async (req: Request, res: Response) => {
  const { id } = req.params;
  try {
    await db.query("UPDATE cart SET quantity = quantity + 1 WHERE id = ?", [id]);
    const [updatedCart] = await db.query<CartItem[]>("SELECT * FROM cart");
    res.json(updatedCart);
  } catch (error) {
    console.error("‚ùå ÏàòÎüâ Ï¶ùÍ∞Ä Ïò§Î•ò:", error);
    res.status(500).json({ message: "ÏÑúÎ≤Ñ Ïò§Î•ò" });
  }
};

/**
 * üìå 4. ÏÉÅÌíà ÏàòÎüâ Í∞êÏÜå (PUT /api/cart/:id/decrease)
 */
export const decreaseQuantity = async (req: Request, res: Response) => {
  const { id } = req.params;
  try {
    await db.query("UPDATE cart SET quantity = quantity - 1 WHERE id = ? AND quantity > 1", [id]);
    const [updatedCart] = await db.query<CartItem[]>("SELECT * FROM cart");
    res.json(updatedCart);
  } catch (error) {
    console.error("‚ùå ÏàòÎüâ Í∞êÏÜå Ïò§Î•ò:", error);
    res.status(500).json({ message: "ÏÑúÎ≤Ñ Ïò§Î•ò" });
  }
};

/**
 * üìå 5. ÏÉÅÌíà ÏÇ≠Ï†ú (DELETE /api/cart/:id)
 */
export const removeItem = async (req: Request, res: Response) => {
  const { id } = req.params;
  try {
    await db.query("DELETE FROM cart WHERE id = ?", [id]);
    const [updatedCart] = await db.query<CartItem[]>("SELECT * FROM cart");
    res.json(updatedCart);
  } catch (error) {
    console.error("‚ùå ÏÉÅÌíà ÏÇ≠Ï†ú Ïò§Î•ò:", error);
    res.status(500).json({ message: "ÏÑúÎ≤Ñ Ïò§Î•ò" });
  }
};

/**
 * üìå 6. ÏÑ†ÌÉùÌïú ÏÉÅÌíà ÏÇ≠Ï†ú (POST /api/cart/remove-selected)
 */
export const removeSelectedItems = async (req: Request, res: Response) => {
  const { selectedIds } = req.body;
  try {
    if (selectedIds.length > 0) {
      await db.query("DELETE FROM cart WHERE id IN (?)", [selectedIds]);
    }
    const [updatedCart] = await db.query<CartItem[]>("SELECT * FROM cart");
    res.json(updatedCart);
  } catch (error) {
    console.error("‚ùå ÏÑ†ÌÉù ÏÇ≠Ï†ú Ïò§Î•ò:", error);
    res.status(500).json({ message: "ÏÑúÎ≤Ñ Ïò§Î•ò" });
  }
};
